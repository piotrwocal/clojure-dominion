<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BookmarkManager">
    <bookmark url="file://$PROJECT_DIR$/src/elastic/elastic_test.clj" line="21" mnemonic="0" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="194df5fc-3bda-4f2a-86e3-7798a6af0666" name="Default" comment="some comments added">
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure-dominion.iml" beforeDir="false" afterPath="$PROJECT_DIR$/clojure-dominion.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/git_digger/digger.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/git_digger/digger.clj" afterDir="false" />
    </list>
    <ignored path="clojure-dominion.iws" />
    <ignored path=".idea/workspace.xml" />
    <ignored path="$PROJECT_DIR$/target/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CreatePatchCommitExecutor">
    <option name="PATCH_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="FavoritesManager">
    <favorites_list name="clojure-dominion" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file leaf-file-name="digger.clj" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/git_digger/digger.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="714">
              <caret line="193" column="41" lean-forward="true" selection-start-line="193" selection-start-column="41" selection-end-line="193" selection-end-column="41" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="core.clj" pinned="false" current-in-tab="false">
        <entry file="jar://$USER_HOME$/.m2/repository/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="303">
              <caret line="406" column="6" selection-start-line="406" selection-start-column="6" selection-end-line="406" selection-end-column="6" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="scrap.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/scrap.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="585">
              <caret line="39" column="20" selection-start-line="39" selection-start-column="20" selection-end-line="39" selection-end-column="20" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="analyse.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/csv_analyse/analyse.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="330">
              <caret line="22" column="17" selection-start-line="22" selection-start-column="17" selection-end-line="22" selection-end-column="17" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="custering.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/git_digger/custering.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="450">
              <caret line="30" selection-start-line="30" selection-end-line="30" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="core.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/clojure_dominion/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="1920">
              <caret line="128" column="11" selection-start-line="128" selection-start-column="11" selection-end-line="128" selection-end-column="11" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="optimize.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/clojure_dominion/optimize.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="180">
              <caret line="12" column="37" selection-start-line="12" selection-start-column="37" selection-end-line="12" selection-end-column="37" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="core.clj" pinned="false" current-in-tab="false">
        <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="1215">
              <caret line="81" column="1" selection-start-line="81" selection-start-column="1" selection-end-line="81" selection-end-column="1" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>trace</find>
      <find>print</find>
      <find>filtered-most</find>
      <find>url</find>
      <find>file</find>
      <find>update</find>
      <find>get-most-similar-files</find>
    </findStrings>
    <replaceStrings>
      <replace />
    </replaceStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/clojure_dominion/scrap.clj" />
        <option value="$PROJECT_DIR$/clojure_dominion.iml" />
        <option value="$PROJECT_DIR$/test/clojure_dominion/game_test.clj" />
        <option value="$PROJECT_DIR$/src/clojure_dominion/game.clj" />
        <option value="$PROJECT_DIR$/src/clojure_dominion/file.clj" />
        <option value="$PROJECT_DIR$/test/clojure_dominion/optimize_test.clj" />
        <option value="$PROJECT_DIR$/src/functional_patterns/patterns.clj" />
        <option value="$PROJECT_DIR$/src/ulf/minesweeper.clj" />
        <option value="$PROJECT_DIR$/src/clojure_dominion/optimize.clj" />
        <option value="$PROJECT_DIR$/test/clojure_programming/clojure_programming.clj" />
        <option value="$PROJECT_DIR$/interesting-stuff.txt" />
        <option value="$PROJECT_DIR$/test/clojure_dominion/action_test.clj" />
        <option value="$PROJECT_DIR$/src/clojure_dominion/action.clj" />
        <option value="$PROJECT_DIR$/src/clojure_dominion/core.clj" />
        <option value="$PROJECT_DIR$/test/clojure_dominion/core_test.clj" />
        <option value="$PROJECT_DIR$/test/rushhour/solver_test.clj" />
        <option value="$PROJECT_DIR$/src/rushhour/solver.clj" />
        <option value="$PROJECT_DIR$/src/elastic/elastic_test.clj" />
        <option value="$PROJECT_DIR$/src/csv_analyse/analyse.clj" />
        <option value="$PROJECT_DIR$/src/git_digger.clj" />
        <option value="$PROJECT_DIR$/src/git_digger/git_digger.clj" />
        <option value="$PROJECT_DIR$/project.clj" />
        <option value="$PROJECT_DIR$/src/scrap.clj" />
        <option value="$PROJECT_DIR$/src/git_digger/custering.clj" />
        <option value="$PROJECT_DIR$/vega/arc-diagram.vg.json" />
        <option value="$PROJECT_DIR$/src/git_digger/digger.clj" />
      </list>
    </option>
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="importAutomatically" value="true" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="MavenProjectNavigator">
    <treeState />
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="960" />
    <option name="y" value="25" />
    <option name="width" value="960" />
    <option name="height" value="1055" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <autoscrollFromSource ProjectPane="true" />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Course" />
      <pane id="AndroidView" />
      <pane id="PackagesPane" />
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="clojure-dominion" type="b2602c69:ProjectViewProjectNode" />
              <item name="clojure-dominion" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="clojure-dominion" type="b2602c69:ProjectViewProjectNode" />
              <item name="clojure-dominion" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="clojure-dominion" type="b2602c69:ProjectViewProjectNode" />
              <item name="clojure-dominion" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="git_digger" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="clojure-dominion" type="b2602c69:ProjectViewProjectNode" />
              <item name="clojure-dominion" type="462c0819:PsiDirectoryNode" />
              <item name="vega" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatOrder0" value="0" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatOrder1" value="1" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatOrder2" value="2" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatOrder3" value="3" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatWidth0" value="149" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatWidth1" value="151" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatWidth2" value="156" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatWidth3" value="949" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeOrder0" value="0" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeOrder1" value="1" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeOrder2" value="2" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeOrder3" value="3" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeWidth0" value="149" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeWidth1" value="151" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeWidth2" value="156" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeWidth3" value="949" />
    <property name="GoToClass.includeLibraries" value="false" />
    <property name="GoToClass.toSaveIncludeLibraries" value="false" />
    <property name="GoToFile.includeJavaFiles" value="false" />
    <property name="GoToNamespace.includeLibraries" value="false" />
    <property name="LayoutCode.rearrangeEntriesClojure" value="false" />
    <property name="MemberChooser.copyJavadoc" value="false" />
    <property name="MemberChooser.showClasses" value="true" />
    <property name="MemberChooser.sorted" value="false" />
    <property name="com.android.tools.idea.instantapp.provision.ProvisionBeforeRunTaskProvider.myTimeStamp" value="1547402347893" />
    <property name="cursive.last.file.extension./home/piotr/Workplace/projects/clojure-dominion/src" value="clj" />
    <property name="cursive.last.file.extension./home/tomcat/Workspace/clojure-dominion/src" value="clj" />
    <property name="dynamic.classpath" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="options.lastSelected" value="preferences.pluginManager" />
    <property name="options.splitter.details.proportions" value="0.2" />
    <property name="options.splitter.main.proportions" value="0.3" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.29229" />
    <property name="recentsLimit" value="5" />
    <property name="run.code.analysis.last.selected.profile" value="pProject Default" />
    <property name="settings.editor.selected.configurable" value="editor.preferences.fonts.default" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/test/clojure_dominion" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/git_digger" />
      <recent name="$PROJECT_DIR$/test/clojure_programming" />
    </key>
  </component>
  <component name="ReplState" timestamp="1547472392603">{:repl-history {:ide [], :local [{:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (first x)\n      (vec x (jaccard-similarity (files-hashes (first x))\n                                 (files-hashes (second x)))))&quot;, :offset 192, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (first x)\n      (vector x (jaccard-similarity (files-hashes (first x))\n                                 (files-hashes (second x)))))&quot;, :offset 195, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (first x)\n      (mapcat (vector % (jaccard-similarity (files-hashes (first %))\n                                 (files-hashes (second %)))) x))&quot;, :offset 206, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (first x)\n      (mapcat #(vector % (jaccard-similarity (files-hashes (first %))\n                                 (files-hashes (second %)))) x))&quot;, :offset 207, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (first x)\n      (map #(jaccard-similarity (files-hashes (first %))\n                          (files-hashes (second %))) x))&quot;, :offset 186, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (mapcat (vector % (jaccard-similarity (files-hashes (first %))\n                                 (files-hashes (second %)))) x))&quot;, :offset 190, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (mapcat #(vector % (jaccard-similarity (files-hashes (first %))\n                                 (files-hashes (second %)))) x))&quot;, :offset 191, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (zipmap (map key x) (map #(jaccard-similarity (files-hashes (first %))\n                                                   (files-hashes (second %))) x))\n      \n      (mapcat #(vector % (jaccard-similarity (files-hashes (first %))\n                                             (files-hashes (second %)))) x))&quot;, :offset 369, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (zipmap (map key x) (map #(jaccard-similarity (files-hashes (first %))\n                                                   (files-hashes (second %))) x)))&quot;, :offset 216, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (zipmap (map first x) (map #(jaccard-similarity (files-hashes (first %))\n                                                   (files-hashes (second %))) x)))&quot;, :offset 218, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (zipmap x (map #(jaccard-similarity (files-hashes (first %))\n                                                   (files-hashes (second %))) x)))&quot;, :offset 206, :ns &quot;git-digger.digger&quot;} {:command &quot;(def files-hashes\n  (-&gt;&gt; (git-log-&gt;commits (call-git-log))\n       commits-&gt;entries\n       ;(remove-entries \&quot;^.idea/|^test/|.gradle|.xml|.properties\&quot;)\n       entries-&gt;file-to-commit-hashes\n       (sort-by (comp count second) &gt;))\n       (reduce merge {}))&quot;, :offset 253, :ns &quot;git-digger.digger&quot;} {:command &quot;(def files-hashes\n  (-&gt;&gt; (git-log-&gt;commits (call-git-log))\n       commits-&gt;entries\n       ;(remove-entries \&quot;^.idea/|^test/|.gradle|.xml|.properties\&quot;)\n       entries-&gt;file-to-commit-hashes\n       (sort-by (comp count second) &gt;)\n       (reduce merge sorted-map)))&quot;, :offset 261, :ns &quot;git-digger.digger&quot;} {:command &quot;(def files-hashes\n  (-&gt;&gt; (git-log-&gt;commits (call-git-log))\n       commits-&gt;entries\n       ;(remove-entries \&quot;^.idea/|^test/|.gradle|.xml|.properties\&quot;)\n       entries-&gt;file-to-commit-hashes))&quot;, :offset 189, :ns &quot;git-digger.digger&quot;} {:command &quot;(def files-hashes\n  (-&gt;&gt; (git-log-&gt;commits (call-git-log))\n       commits-&gt;entries\n       ;(remove-entries \&quot;^.idea/|^test/|.gradle|.xml|.properties\&quot;)\n       entries-&gt;file-to-commit-hashes\n       (sort-by (comp count second) &gt;)))&quot;, :offset 228, :ns &quot;git-digger.digger&quot;} {:command &quot;(def files-hashes\n  (-&gt;&gt; (git-log-&gt;commits (call-git-log))\n       commits-&gt;entries\n       ;(remove-entries \&quot;^.idea/|^test/|.gradle|.xml|.properties\&quot;)\n       entries-&gt;file-to-commit-hashes\n       (sort-by (comp count second) &gt;)\n       (apply into (sorted-map))))&quot;, :offset 261, :ns &quot;git-digger.digger&quot;} {:command &quot;(def files-hashes\n  (-&gt;&gt; (git-log-&gt;commits (call-git-log))\n       commits-&gt;entries\n       ;(remove-entries \&quot;^.idea/|^test/|.gradle|.xml|.properties\&quot;)\n       entries-&gt;file-to-commit-hashes\n       (sort-by (comp count second) &gt;)\n       (into (sorted-map) x)))&quot;, :offset 257, :ns &quot;git-digger.digger&quot;} {:command &quot;(def files-hashes\n  (-&gt;&gt; (git-log-&gt;commits (call-git-log))\n       commits-&gt;entries\n       ;(remove-entries \&quot;^.idea/|^test/|.gradle|.xml|.properties\&quot;)\n       entries-&gt;file-to-commit-hashes\n       (sort-by (comp count second) &gt;)\n       (into (sorted-map))))&quot;, :offset 255, :ns &quot;git-digger.digger&quot;} {:command &quot;(def files-hashes\n  (-&gt;&gt; (git-log-&gt;commits (call-git-log))\n       commits-&gt;entries\n       ;(remove-entries \&quot;^.idea/|^test/|.gradle|.xml|.properties\&quot;)\n       entries-&gt;file-to-commit-hashes\n       (sort-by (comp count second) &gt;)\n       (into (sorted-map-by (comp count second)))))&quot;, :offset 278, :ns &quot;git-digger.digger&quot;} {:command &quot;(def files-hashes\n  (-&gt;&gt; (git-log-&gt;commits (call-git-log))\n       commits-&gt;entries\n       ;(remove-entries \&quot;^.idea/|^test/|.gradle|.xml|.properties\&quot;)\n       entries-&gt;file-to-commit-hashes\n       (sort-by (comp count second) &gt;)\n       (reduce merge {})))&quot;, :offset 253, :ns &quot;git-digger.digger&quot;} {:command &quot;(pprint files-hashes)&quot;, :offset 21, :ns &quot;git-digger.digger&quot;} {:command &quot;(-&gt;&gt; files-hashes\n     (sort-by (comp count second)))&quot;, :offset 53, :ns &quot;git-digger.digger&quot;} {:command &quot;(-&gt;&gt; files-hashes)&quot;, :offset 18, :ns &quot;git-digger.digger&quot;} {:command &quot;(-&gt;&gt; files-hashes\n     (sort-by (comp count second) &gt;))&quot;, :offset 55, :ns &quot;git-digger.digger&quot;} {:command &quot;(def files-hashes\n  (-&gt;&gt; (git-log-&gt;commits (call-git-log))\n       commits-&gt;entries\n       ;(remove-entries \&quot;^.idea/|^test/|.gradle|.xml|.properties\&quot;)\n       entries-&gt;file-to-commit-hashes\n       (reduce merge {})))&quot;, :offset 214, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x))&quot;, :offset 57, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (zipmap x (map (fn[[f s]] (jaccard-similarity \n                                  (files-hashes f)\n                                  (files-hashes s))) x)))&quot;, :offset 218, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (zipmap x (map (fn[[f s]] (jaccard-similarity \n                                  (files-hashes f)\n                                  (files-hashes s))) x))\n      (sort-by second x))&quot;, :offset 243, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (zipmap x (map (fn[[f s]] (jaccard-similarity \n                                  (files-hashes f)\n                                  (files-hashes s))) x))\n      (sort-by second &gt; x))&quot;, :offset 245, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (zipmap x (map (fn[[f s]] (jaccard-similarity \n                                  (files-hashes f)\n                                  (files-hashes s))) x))\n      (sort-by second &gt; x)\n      (take 10))&quot;, :offset 261, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (zipmap x (map (fn[[f s]] (jaccard-similarity \n                                  (files-hashes f)\n                                  (files-hashes s))) x))\n      (sort-by second &gt; x)\n      (take 10 x))&quot;, :offset 263, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (zipmap x (map (fn[[f s]] (jaccard-similarity \n                                  (files-hashes f)\n                                  (files-hashes s))) x))\n      (sort-by second &gt; x)\n      (take 20 x))&quot;, :offset 263, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (zipmap x (map (fn[[f s]] (jaccard-similarity \n                                  (files-hashes f)\n                                  (files-hashes s))) x))\n      (sort-by second &gt; x)\n      (take 30 x))&quot;, :offset 263, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (pairs x)\n      (zipmap x (map (fn[[f s]] (jaccard-similarity \n                                  (files-hashes f)\n                                  (files-hashes s))) x))\n      (sort-by second &gt; x)\n      (take 50 x))&quot;, :offset 263, :ns &quot;git-digger.digger&quot;} {:command &quot;(ns git-digger.digger\n  (:use clojure.pprint)\n  (:use [clojure.java.shell :only [sh]])\n  (:require [clojure.string :as str])\n  (:require [clojure.set :as set])\n  (:require [oz.core :as oz]))&quot;, :offset 190, :ns &quot;clojure-dominion.core&quot;} {:command &quot;(defn call-git-log\n  \&quot;Calls command line 'git log' command and returns logout if call was successful\&quot;\n  []\n  (let [ result (sh \&quot;sh\&quot; \&quot;-c\&quot; \&quot;cd /home/piotr/Workspace/clojure-dominion &amp;&amp; git log --pretty=format:'[%h] %ae %ad' --date=short --numstat --after='2018-01-01 00:00:00'\&quot;)]\n    (when (empty? (:err result))\n      (:out result))))&quot;, :offset 333, :ns &quot;git-digger.digger&quot;} {:command &quot;(defn- parse-commit-header [header]\n  (zipmap [:hash :mail :date]\n          (str/split header #\&quot; \&quot;)))&quot;, :offset 101, :ns &quot;git-digger.digger&quot;} {:command &quot;(defn- parse-commit-line [line]\n  (-&gt; (zipmap [:added :deleted :file]\n              (str/split line #\&quot;\\t\&quot;))\n      (update :added read-string)\n      (update :deleted read-string)))&quot;, :offset 179, :ns &quot;git-digger.digger&quot;} {:command &quot;(defn parse-commit\n  \&quot;Parse single commit logout to map\&quot;\n  [entry]\n  (let [[x &amp; xs] (str/split entry #\&quot;\\n\&quot;)]\n    (assoc (parse-commit-header x) :entries (map parse-commit-line xs))))&quot;, :offset 182, :ns &quot;git-digger.digger&quot;} {:command &quot;(defn git-log-&gt;commits\n  \&quot;Parse input string git logout to commit maps\&quot;\n  [x]\n  (as-&gt; x x\n        (str/split x #\&quot;\\n\\n\&quot;)\n        (map parse-commit x)))&quot;, :offset 150, :ns &quot;git-digger.digger&quot;} {:command &quot;(defn- commit-&gt;entries [commit]\n  (map #(assoc % :hash (:hash commit)\n                 :mail (:mail commit)\n                 :date (:date commit))\n       (:entries commit)))&quot;, :offset 173, :ns &quot;git-digger.digger&quot;} {:command &quot;(defn commits-&gt;entries [commits]\n  (mapcat commit-&gt;entries commits))&quot;, :offset 68, :ns &quot;git-digger.digger&quot;} {:command &quot;(defn update-map-values [m f &amp; args]\n  (reduce (fn [r [k v]] (assoc r k (apply f v args)))\n          {} m))&quot;, :offset 107, :ns &quot;git-digger.digger&quot;} {:command &quot;(defn entries-&gt;file-to-commit-hashes [entries]\n  (as-&gt; entries x\n        (map #(select-keys % [:file :hash]) x)\n        (group-by :file x)\n        (update-map-values x (partial map :hash))\n        (update-map-values x set)))&quot;, :offset 224, :ns &quot;git-digger.digger&quot;} {:command &quot;(defn remove-entries [regex-str entries]\n  (let [regex (java.util.regex.Pattern/compile regex-str)]\n    (remove #(re-find regex (:file %)) entries)))&quot;, :offset 149, :ns &quot;git-digger.digger&quot;} {:command &quot;(defn filter-entries [regex-str entries]\n  (let [regex (java.util.regex.Pattern/compile regex-str)]\n    (filter #(re-find regex (:file %)) entries)))&quot;, :offset 149, :ns &quot;git-digger.digger&quot;} {:command &quot;(def commits\n  (git-log-&gt;commits (call-git-log)))&quot;, :offset 49, :ns &quot;git-digger.digger&quot;} {:command &quot;(def entries\n  (commits-&gt;entries commits))&quot;, :offset 42, :ns &quot;git-digger.digger&quot;} {:command &quot;(def files-hashes\n  (-&gt;&gt; entries\n       (remove-entries \&quot;^.idea/|^test/|.gradle|.xml|.properties\&quot;)\n       entries-&gt;file-to-commit-hashes))&quot;, :offset 138, :ns &quot;git-digger.digger&quot;} {:command &quot;(defn jaccard-similarity [set-1 set-2]\n  (/\n    (count (set/intersection set-1 set-2))\n    (count (set/union set-1 set-2))))&quot;, :offset 124, :ns &quot;git-digger.digger&quot;} {:command &quot;(defn pairs [xs]\n  (loop [result [] [x &amp; xs] xs]\n    (if (empty? xs) result\n      (recur (into result (map (fn [y] [x y]) xs))\n               xs))))&quot;, :offset 148, :ns &quot;git-digger.digger&quot;} {:command &quot;(defn get-most-changed-files [entries]\n  (as-&gt; (group-by :file entries) x\n    (update-map-values x count)\n    (sort-by second &gt; x)))&quot;, :offset 132, :ns &quot;git-digger.digger&quot;} {:command &quot;(defn get-most-active-commiter [commits]\n\t(as-&gt; (group-by :mail commits) x\n\t\t\t\t(update-map-values x count)\n\t\t\t\t(sort-by second &gt; x)))&quot;, :offset 133, :ns &quot;git-digger.digger&quot;} {:command &quot;(defn get-most-similar-files [files-hashes sim-f]\n  (as-&gt; (map first files-hashes) x\n        (pairs x)\n        (zipmap x (map (fn[[k1 k2]] (sim-f (files-hashes k1) (files-hashes k2)))\n                       x))\n        (sort-by second &gt; x)))&quot;, :offset 241, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; (group-by :date entries) x\n      (update-map-values x count)\n      (sort-by key x))&quot;, :offset 89, :ns &quot;git-digger.digger&quot;} {:command &quot;(get-most-similar-files\n  files-hashes jaccard-similarity)&quot;, :offset 58, :ns &quot;git-digger.digger&quot;} {:command &quot;(oz/start-plot-server!)&quot;, :offset 23, :ns &quot;git-digger.digger&quot;} {:command &quot;(def oz-input\n  (map (fn[[f s]] {:file f :changes s}) (get-most-changed-files entries)))&quot;, :offset 88, :ns &quot;git-digger.digger&quot;} {:command &quot;(pprint oz-input)&quot;, :offset 17, :ns &quot;git-digger.digger&quot;} {:command &quot;(defn bar-plot [oz-input]\n  {:data {:values oz-input}\n   :encoding {:x {:field \&quot;changes\&quot; :type \&quot;quantitative\&quot; }\n               :y {:field \&quot;file\&quot; :type \&quot;ordinal\&quot; :axis{ :labelLimit 600} :sort { :field \&quot;changes\&quot;}}}\n   :mark \&quot;bar\&quot;\n   :title \&quot;Files with most git changes\&quot;\n   :width 800\n   :height 400\n   })&quot;, :offset 302, :ns &quot;git-digger.digger&quot;} {:command &quot;(get-most-similar-files file-hashes jaccard-similarity)&quot;, :offset 55, :ns &quot;git-digger.digger&quot;} {:command &quot;(slurp \&quot;./vega/bar-chart.vg.json\&quot;)&quot;, :offset 34, :ns &quot;git-digger.digger&quot;} {:command &quot;(oz/v!\n  (bar-plot oz-input))&quot;, :offset 29, :ns &quot;git-digger.digger&quot;} {:command &quot;(get-vg-nodes files-hashes)&quot;, :offset 27, :ns &quot;git-digger.digger&quot;} {:command &quot;(count entries)&quot;, :offset 15, :ns &quot;git-digger.digger&quot;} {:command &quot;(take 10 commits)&quot;, :offset 17, :ns &quot;git-digger.digger&quot;} {:command &quot;(take 10 entries)&quot;, :offset 17, :ns &quot;git-digger.digger&quot;} {:command &quot;(take 10 files-hashes)&quot;, :offset 22, :ns &quot;git-digger.digger&quot;} {:command &quot;(count files-hashes)&quot;, :offset 20, :ns &quot;git-digger.digger&quot;} {:command &quot;(count commits)&quot;, :offset 15, :ns &quot;git-digger.digger&quot;} {:command &quot;(count (get-vg-nodes files-hashes))&quot;, :offset 35, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (sort-by (comp count second) x)\n      (take 10 x))&quot;, :offset 77, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (sort-by (comp count second) &gt; x)\n      (take 10 x))&quot;, :offset 79, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (filter #\&quot;*.java\&quot; x)\n      (count x))&quot;, :offset 64, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (filter #\&quot;*\\.java$\&quot; x)\n      (count x))&quot;, :offset 66, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (filter #(re-find #\&quot;*\\.java$\&quot; (first %)) x) \n      (count x))&quot;, :offset 88, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (filter #(re-find #\&quot;\\*\\.java$\&quot; (first %)) x) \n      (count x))&quot;, :offset 89, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (filter #(re-find #\&quot;\\*\\.java\&quot; (first %)) x) \n      (count x))&quot;, :offset 88, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x)&quot;, :offset 21, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first))&quot;, :offset 39, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x))&quot;, :offset 41, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (filter #(re-find #\&quot;\\*\\.java\&quot;) x))&quot;, :offset 81, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (filter #(re-find #\&quot;\\*\\.java\&quot; %) x))&quot;, :offset 83, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (filter #(re-find #\&quot;*\\.java\&quot; %) x))&quot;, :offset 82, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (filter #(re-find #\&quot;*.java\&quot; %) x))&quot;, :offset 81, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (filter #(re-find #\&quot;*java\&quot; %) x))&quot;, :offset 80, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (filter #(re-find #\&quot;java\&quot; %) x))&quot;, :offset 79, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (filter #(re-find #\&quot;.java\&quot; %) x))&quot;, :offset 80, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (map first x)\n      (filter #(re-find #\&quot;.java$\&quot; %) x))&quot;, :offset 81, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (filter #(re-find #\&quot;.java$\&quot; (first %)) x))&quot;, :offset 69, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (filter #(re-find #\&quot;.java$\&quot; (first %)) x)\n      (count x))&quot;, :offset 85, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (filter #(re-find #\&quot;.java$\&quot; (first %)) x)\n      (sort-by (comp count second) &gt; x))&quot;, :offset 109, :ns &quot;git-digger.digger&quot;} {:command &quot;(as-&gt; files-hashes x\n      (filter #(re-find #\&quot;.java$\&quot; (first %)) x)\n      (sort-by (comp count second) &gt; x)\n      (take 100 x))&quot;, :offset 128, :ns &quot;git-digger.digger&quot;} {:command &quot;(def ps-file-hashes\n  (as-&gt; files-hashes x\n        (filter #(re-find #\&quot;.java$\&quot; (first %)) x)\n        (sort-by (comp count second) &gt; x)\n        (take 100 x)))&quot;, :offset 157, :ns &quot;git-digger.digger&quot;} {:command &quot;(def ps-files-hashes\n  (as-&gt; files-hashes x\n        (filter #(re-find #\&quot;.java$\&quot; (first %)) x)\n        (sort-by (comp count second) &gt; x)\n        (take 100 x)))&quot;, :offset 158, :ns &quot;git-digger.digger&quot;} {:command &quot;(let [files-index (files-hashes-&gt;files-index ps-files-hashes)\n      file-pairs-sim (-&gt; (get-most-similar-files ps-files-hashes jaccard-similarity)\n                         (scale-similar-files-values 20))]\n  (as-&gt; file-pairs-sim x\n        (map (fn[[[f1 f2] sim]]\n               (hash-map :source f1 :target f2 :value sim)) x )))&quot;, :offset 328, :ns &quot;git-digger.digger&quot;} {:command &quot;(let [files-index (files-hashes-&gt;files-index files-hashes)\n      file-pairs-sim (-&gt; (get-most-similar-files files-hashes jaccard-similarity)\n                         (scale-similar-files-values 20))]\n  (as-&gt; file-pairs-sim x\n        (map (fn[[[f1 f2] sim]] (hash-map :source f1 :target f2 :value sim))\n             x)\n        (take 10 x)))&quot;, :offset 339, :ns &quot;git-digger.digger&quot;} {:command &quot;(files-hashes-&gt;files-index files-hashes)&quot;, :offset 40, :ns &quot;git-digger.digger&quot;} {:command &quot;(get-most-similar-files files-hashes jaccard-similarity)&quot;, :offset 56, :ns &quot;git-digger.digger&quot;} {:command &quot;(def ps-files-hashes\n  (as-&gt; files-hashes x\n        (filter #(re-find #\&quot;.java$\&quot; (first %)) x)\n        (sort-by (comp count second) &gt; x)\n        (take 10 x)))&quot;, :offset 157, :ns &quot;git-digger.digger&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Clojure REPL.REPL for clojure-dominion">
    <configuration default="true" type="Applet" factoryName="Applet">
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <method>
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <method>
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="REPL for clojure-dominion" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false" temporary="true">
      <module name="clojure-dominion" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="-Xmx8g -Xms2g" />
      <setting name="parameters" value="-Xmx8g -Xms2g" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="0" />
      <module name="" />
    </configuration>
    <configuration name="analyse" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <module name="clojure-dominion" />
      <setting name="path" value="$PROJECT_DIR$/src/csv_analyse/analyse.clj" />
      <setting name="namespace" value="" />
      <setting name="execution" value="INTELLIJ" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="$PROJECT_DIR$/src/csv_analyse" />
    </configuration>
    <configuration name="clojure_programming" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <module name="clojure-dominion" />
      <setting name="path" value="$PROJECT_DIR$/test/clojure_programming/clojure_programming.clj" />
      <setting name="namespace" value="" />
      <setting name="execution" value="INTELLIJ" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="$PROJECT_DIR$/test/clojure_programming" />
    </configuration>
    <configuration name="digger" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <module name="clojure-dominion" />
      <setting name="path" value="$PROJECT_DIR$/src/git_digger/digger.clj" />
      <setting name="namespace" value="" />
      <setting name="execution" value="INTELLIJ" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="$PROJECT_DIR$/src/git_digger" />
    </configuration>
    <configuration name="optimize" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <module name="clojure-dominion" />
      <setting name="path" value="$PROJECT_DIR$/src/clojure_dominion/optimize.clj" />
      <setting name="namespace" value="" />
      <setting name="execution" value="INTELLIJ" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="$PROJECT_DIR$/src/clojure_dominion" />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="moduleWithDependencies" />
      </option>
      <patterns />
      <method>
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="lein kibit" type="LeiningenRunConfiguration" factoryName="Leiningen">
      <module name="" />
      <setting name="profiles" value="" />
      <setting name="trampoline" value="false" />
      <RunnerSettings RunnerId="Run" />
      <ConfigurationWrapper RunnerId="Run" />
    </configuration>
    <configuration name="lein test" type="LeiningenRunConfiguration" factoryName="Leiningen">
      <module name="" />
      <setting name="profiles" value="" />
      <setting name="trampoline" value="false" />
      <RunnerSettings RunnerId="Run" />
      <ConfigurationWrapper RunnerId="Run" />
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="moduleWithDependencies" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <properties />
      <listeners />
      <method>
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
      <module name="" />
      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m" />
      <option name="PROGRAM_PARAMETERS" />
      <predefined_log_file id="idea.log" enabled="true" />
      <method>
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="AndroidRunConfigurationType" factoryName="Android Application">
      <module name="" />
      <option name="DEPLOY" value="true" />
      <option name="ARTIFACT_NAME" value="" />
      <option name="PM_INSTALL_OPTIONS" value="" />
      <option name="ACTIVITY_EXTRA_FLAGS" value="" />
      <option name="MODE" value="default_activity" />
      <option name="TARGET_SELECTION_MODE" value="EMULATOR" />
      <option name="PREFERRED_AVD" value="" />
      <option name="CLEAR_LOGCAT" value="false" />
      <option name="SHOW_LOGCAT_AUTOMATICALLY" value="true" />
      <option name="SKIP_NOOP_APK_INSTALLATIONS" value="true" />
      <option name="FORCE_STOP_RUNNING_APP" value="true" />
      <option name="USE_LAST_SELECTED_DEVICE" value="false" />
      <option name="PREFERRED_AVD" value="" />
      <option name="DEEP_LINK" value="" />
      <option name="ACTIVITY_CLASS" value="" />
      <method />
    </configuration>
    <configuration default="true" type="AndroidTestRunConfigurationType" factoryName="Android Tests">
      <module name="" />
      <option name="TESTING_TYPE" value="0" />
      <option name="INSTRUMENTATION_RUNNER_CLASS" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="PACKAGE_NAME" value="" />
      <option name="EXTRA_OPTIONS" value="" />
      <option name="TARGET_SELECTION_MODE" value="EMULATOR" />
      <option name="PREFERRED_AVD" value="" />
      <option name="CLEAR_LOGCAT" value="false" />
      <option name="SHOW_LOGCAT_AUTOMATICALLY" value="true" />
      <option name="SKIP_NOOP_APK_INSTALLATIONS" value="true" />
      <option name="FORCE_STOP_RUNNING_APP" value="true" />
      <option name="USE_LAST_SELECTED_DEVICE" value="false" />
      <option name="PREFERRED_AVD" value="" />
      <method />
    </configuration>
    <configuration default="true" type="JUnitTestDiscovery" factoryName="JUnit Test Discovery" changeList="All">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <envs />
      <patterns />
      <method />
    </configuration>
    <configuration default="true" type="TestNGTestDiscovery" factoryName="TestNG Test Discovery" changeList="All">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="ANNOTATION_TYPE" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <envs />
      <properties />
      <listeners />
      <method />
    </configuration>
    <configuration name="&lt;template&gt;" type="WebApp" default="true" selected="false">
      <Host>localhost</Host>
      <Port>5050</Port>
    </configuration>
    <list>
      <item itemvalue="Leiningen.lein kibit" />
      <item itemvalue="Leiningen.lein test" />
      <item itemvalue="Clojure Application.analyse" />
      <item itemvalue="Clojure Application.clojure_programming" />
      <item itemvalue="Clojure Application.optimize" />
      <item itemvalue="Clojure Application.digger" />
      <item itemvalue="Clojure REPL.REPL for clojure-dominion" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Clojure REPL.REPL for clojure-dominion" />
        <item itemvalue="Clojure Application.digger" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration>$USER_HOME$/.subversion</configuration>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="194df5fc-3bda-4f2a-86e3-7798a6af0666" name="Default" comment="" />
      <created>1419625707062</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1419625707062</updated>
    </task>
    <task id="LOCAL-00001" summary="added tests, refactored count-points">
      <created>1422052527471</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1422052527471</updated>
    </task>
    <task id="LOCAL-00002" summary="file split">
      <created>1422303021817</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1422303021817</updated>
    </task>
    <task id="LOCAL-00003" summary="extended docs">
      <created>1422306548569</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1422306548569</updated>
    </task>
    <task id="LOCAL-00004" summary="small cosmeticsˆ">
      <created>1422395157149</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1422395157149</updated>
    </task>
    <task id="LOCAL-00005" summary="daily update">
      <created>1422400061026</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1422400061026</updated>
    </task>
    <task id="LOCAL-00006" summary="daily update">
      <created>1422482403695</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1422482403695</updated>
    </task>
    <task id="LOCAL-00007" summary="daily update">
      <created>1422568045635</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1422568045635</updated>
    </task>
    <task id="LOCAL-00008" summary="daily update">
      <created>1422994882806</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1422994882806</updated>
    </task>
    <task id="LOCAL-00009" summary="daily update">
      <created>1423000324116</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1423000324117</updated>
    </task>
    <task id="LOCAL-00010" summary="daily update">
      <created>1423085188026</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1423085188026</updated>
    </task>
    <task id="LOCAL-00011" summary="daily update">
      <created>1423085555734</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1423085555735</updated>
    </task>
    <task id="LOCAL-00012" summary="daily update">
      <created>1423516155871</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1423516155871</updated>
    </task>
    <task id="LOCAL-00013" summary="daily update">
      <created>1423518227037</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1423518227037</updated>
    </task>
    <task id="LOCAL-00014" summary="daily update">
      <created>1424034864218</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1424034864218</updated>
    </task>
    <task id="LOCAL-00015" summary="daily update">
      <created>1424641332461</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1424641332461</updated>
    </task>
    <task id="LOCAL-00016" summary="daily update">
      <created>1424641788774</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1424641788774</updated>
    </task>
    <task id="LOCAL-00017" summary="daily update">
      <created>1425317836153</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1425317836153</updated>
    </task>
    <task id="LOCAL-00018" summary="daily update">
      <created>1425422305147</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1425422305147</updated>
    </task>
    <task id="LOCAL-00019" summary="daily update">
      <created>1425931206881</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1425931206881</updated>
    </task>
    <task id="LOCAL-00020" summary="daily update">
      <created>1432154889839</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1432154889839</updated>
    </task>
    <task id="LOCAL-00021" summary="daily update">
      <created>1432158105523</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1432158105523</updated>
    </task>
    <task id="LOCAL-00022" summary="daily update">
      <created>1432928886159</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1432928886159</updated>
    </task>
    <task id="LOCAL-00023" summary="daily update">
      <created>1453581956916</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1453581956916</updated>
    </task>
    <task id="LOCAL-00024" summary="daily update">
      <created>1453582159049</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1453582159049</updated>
    </task>
    <task id="LOCAL-00025" summary="daily update">
      <created>1453582197183</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1453582197183</updated>
    </task>
    <task id="LOCAL-00026" summary="daily update">
      <created>1453582201734</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1453582201734</updated>
    </task>
    <task id="LOCAL-00027" summary="added git-digger part">
      <created>1546369339713</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1546369339713</updated>
    </task>
    <task id="LOCAL-00028" summary="added oz plotting">
      <created>1546381612333</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1546381612333</updated>
    </task>
    <task id="LOCAL-00029" summary="get some stats oz plotting">
      <created>1546424279807</created>
      <option name="number" value="00029" />
      <option name="presentableId" value="LOCAL-00029" />
      <option name="project" value="LOCAL" />
      <updated>1546424279807</updated>
    </task>
    <task id="LOCAL-00030" summary="some comments added">
      <created>1546693959093</created>
      <option name="number" value="00030" />
      <option name="presentableId" value="LOCAL-00030" />
      <option name="project" value="LOCAL" />
      <updated>1546693959093</updated>
    </task>
    <option name="localTasksCounter" value="31" />
    <servers />
  </component>
  <component name="TodoView" selected-index="0">
    <todo-panel id="selected-file">
      <are-packages-shown value="false" />
      <are-modules-shown value="false" />
      <flatten-packages value="false" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <are-modules-shown value="false" />
      <flatten-packages value="false" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="default-changelist">
      <are-packages-shown value="false" />
      <are-modules-shown value="false" />
      <flatten-packages value="false" />
      <is-autoscroll-to-source value="false" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="27" width="1920" height="1078" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info anchor="bottom" id="TODO" order="5" weight="0.32943925" />
      <window_info id="Palette&#9;" order="3" />
      <window_info id="Image Layers" order="6" />
      <window_info anchor="bottom" id="Gerrit" order="10" />
      <window_info anchor="right" id="Capture Analysis" order="8" />
      <window_info anchor="bottom" id="Event Log" order="9" side_tool="true" weight="0.3292232" />
      <window_info anchor="right" id="Maven Projects" order="7" weight="0.32998565" />
      <window_info active="true" anchor="right" id="REPL" order="3" sideWeight="0.50061655" side_tool="true" visible="true" weight="0.47758806" />
      <window_info anchor="bottom" id="Version Control" order="11" weight="0.20935673" />
      <window_info anchor="bottom" id="Run" order="1" weight="0.30409357" />
      <window_info anchor="right" id="Leiningen" order="5" sideWeight="0.49815044" weight="0.32998565" />
      <window_info anchor="bottom" id="Terminal" order="7" weight="0.32870865" />
      <window_info id="Capture Tool" order="5" />
      <window_info anchor="right" id="Designer" order="4" />
      <window_info content_ui="combo" id="Project" order="0" weight="0.15848452" />
      <window_info anchor="bottom" id="Educational.CheckDetails" order="14" />
      <window_info id="Learn" order="7" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.32998565" />
      <window_info anchor="right" id="Ant Build" order="0" />
      <window_info anchor="right" id="Theme Preview" order="11" />
      <window_info id="Favorites" order="4" side_tool="true" weight="0.32998565" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.32857144" />
      <window_info id="UI Designer" order="2" />
      <window_info anchor="bottom" id="Messages" order="12" weight="0.3292232" />
      <window_info anchor="bottom" id="Inspection" order="8" weight="0.4" />
      <window_info anchor="right" id="Commander" order="1" />
      <window_info anchor="bottom" id="Find" order="13" weight="0.3280318" />
      <window_info anchor="bottom" id="Changes" order="2" weight="0.3292232" />
      <window_info anchor="bottom" id="Cvs" order="6" weight="0.25" />
      <window_info anchor="right" id="Dynamic Properties" order="9" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="right" id="Maven" order="10" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Palette" order="6" />
      <window_info anchor="bottom" id="Application Servers" order="4" />
    </layout>
    <layout-to-restore>
      <window_info anchor="right" id="Maven" order="9" />
      <window_info anchor="bottom" id="Application Servers" order="4" />
      <window_info anchor="right" id="Designer" order="3" />
      <window_info anchor="right" id="Palette" order="5" />
      <window_info anchor="bottom" id="Educational.CheckDetails" order="10" />
      <window_info id="Image Layers" order="6" />
      <window_info anchor="bottom" id="Run" order="0" weight="0.30409357" />
      <window_info anchor="right" id="Ant Build" order="0" />
      <window_info anchor="bottom" id="Changes" order="2" weight="0.3292232" />
      <window_info id="UI Designer" order="2" />
      <window_info id="Favorites" order="4" side_tool="true" weight="0.32998565" />
      <window_info anchor="bottom" id="Terminal" order="5" weight="0.32982457" />
      <window_info id="Capture Tool" order="5" />
      <window_info anchor="right" id="Capture Analysis" order="7" />
      <window_info anchor="right" id="Commander" order="1" />
      <window_info anchor="bottom" id="Event Log" order="6" side_tool="true" weight="0.3292232" />
      <window_info anchor="bottom" id="Version Control" order="7" weight="0.20935673" />
      <window_info anchor="right" id="Maven Projects" order="6" weight="0.32998565" />
      <window_info anchor="bottom" id="Find" order="9" weight="0.32865497" />
      <window_info content_ui="combo" id="Project" order="0" weight="0.15910333" />
      <window_info id="Learn" order="7" />
      <window_info anchor="bottom" id="Messages" order="8" weight="0.3292232" />
      <window_info anchor="right" id="Leiningen" order="4" sideWeight="0.49815044" weight="0.32998565" />
      <window_info anchor="bottom" id="TODO" order="1" weight="0.32943925" />
      <window_info id="Palette&#9;" order="3" />
      <window_info anchor="right" id="Theme Preview" order="10" />
      <window_info anchor="right" id="Dynamic Properties" order="8" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.32998565" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.3292232" />
      <window_info anchor="right" id="REPL" order="2" sideWeight="0.50061655" side_tool="true" visible="true" weight="0.52214324" />
    </layout-to-restore>
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.configurationType" implementationName="ClojureScriptRunConfiguration" />
    <option featureType="com.intellij.configurationType" implementationName="ClojureREPL" />
    <option featureType="com.intellij.configurationType" implementationName="LeiningenRunConfiguration" />
  </component>
  <component name="Vcs.Log.UiProperties">
    <option name="RECENTLY_FILTERED_USER_GROUPS">
      <collection />
    </option>
    <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
      <collection />
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="false" />
    <option name="CHECK_NEW_TODO" value="false" />
    <MESSAGE value="added tests, refactored count-points" />
    <MESSAGE value="file split" />
    <MESSAGE value="extended docs" />
    <MESSAGE value="small cosmeticsˆ" />
    <MESSAGE value="daily update" />
    <MESSAGE value="added git-digger part" />
    <MESSAGE value="added oz plotting" />
    <MESSAGE value="get some stats oz plotting" />
    <MESSAGE value="some comments added" />
    <option name="LAST_COMMIT_MESSAGE" value="some comments added" />
  </component>
  <component name="antWorkspaceConfiguration">
    <option name="IS_AUTOSCROLL_TO_SOURCE" value="false" />
    <option name="FILTER_TARGETS" value="false" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/.idea/vcs.xml">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="5" column="10" selection-start-line="5" selection-start-column="10" selection-end-line="5" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.gitignore">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.6.0/clojure-1.6.0.jar!/clojure/pprint/pprint_base.clj" />
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.6.0/clojure-1.6.0.jar!/clojure/java/browse.clj" />
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.6.0/clojure-1.6.0.jar!/clojure/string.clj" />
    <entry file="file://$PROJECT_DIR$/README.md">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/tools.trace/0.7.8/tools.trace-0.7.8.jar!/clojure/tools/trace.clj" />
    <entry file="jar://$MAVEN_REPOSITORY$/clojure-complete/clojure-complete/0.2.3/clojure-complete-0.2.3.jar!/project.clj" />
    <entry file="file://$PROJECT_DIR$/pom.xml" />
    <entry file="file://$PROJECT_DIR$/LICENSE">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/clojure-dominion.iml">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="7" column="73" selection-start-line="7" selection-start-column="73" selection-end-line="7" selection-end-column="73" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/doc/intro.md">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="2" selection-start-line="2" selection-end-line="2" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.6.0/clojure-1.6.0.jar!/clojure/lang/RT.class" />
    <entry file="file://$PROJECT_DIR$/.idea/codeStyleSettings.xml">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="12" column="32" selection-start-line="12" selection-start-column="10" selection-end-line="12" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.idea/misc.xml">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="22" column="27" selection-start-line="2" selection-end-line="40" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.idea/clojure_project.xml">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/foo.txt">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/interesting-stuff.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="25" column="73" selection-start-line="25" selection-start-column="73" selection-end-line="25" selection-end-column="73" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/functional_patterns/patterns.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="31" column="29" selection-start-line="31" selection-start-column="29" selection-end-line="31" selection-end-column="29" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.6.0/clojure-1.6.0.jar!/clojure/test.clj" />
    <entry file="file://$PROJECT_DIR$/test/clojure_dominion/action_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="16" column="48" selection-start-line="16" selection-start-column="48" selection-end-line="16" selection-end-column="48" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/clojure_dominion/optimize_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="2" selection-start-line="2" selection-end-line="2" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/clojure_dominion/core_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="2" column="48" selection-start-line="2" selection-start-column="2" selection-end-line="2" selection-end-column="47" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.6.0/clojure-1.6.0.jar!/clojure/core.clj" />
    <entry file="file://$PROJECT_DIR$/src/rushhour/solver.clj" />
    <entry file="file://$PROJECT_DIR$/test/rushhour/solver_test.clj" />
    <entry file="jar://$MAVEN_REPOSITORY$/clojurewerkz/elastisch/3.0.0/elastisch-3.0.0.jar!/clojurewerkz/elastisch/rest/document.clj" />
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/xml.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="77" column="6" selection-start-line="77" selection-start-column="6" selection-end-line="77" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/zip.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="52" column="6" selection-start-line="52" selection-start-column="6" selection-end-line="52" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/java/io.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="577">
          <caret line="445" column="11" selection-start-line="445" selection-start-column="11" selection-end-line="445" selection-end-column="11" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/string.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="260">
          <caret line="218" column="6" selection-start-line="218" selection-start-column="6" selection-end-line="218" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/git_digger/git_digger.clj" />
    <entry file="file://$PROJECT_DIR$/src/elastic/elastic_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="24" column="14" selection-start-line="24" selection-start-column="14" selection-end-line="24" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clojure_dominion/action.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="2" column="23" selection-start-line="2" selection-start-column="2" selection-end-line="2" selection-end-column="23" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/java/shell.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="78" column="6" selection-start-line="78" selection-start-column="6" selection-end-line="78" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/someFileName">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/lang/Ratio.class">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="17">
          <caret line="7" column="11" lean-forward="true" selection-start-line="7" selection-start-column="11" selection-end-line="7" selection-end-column="12" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/set.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="31" column="1" selection-start-line="31" selection-start-column="1" selection-end-line="31" selection-end-column="9" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clojure_dominion/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1920">
          <caret line="128" column="11" selection-start-line="128" selection-start-column="11" selection-end-line="128" selection-end-column="11" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clojure_dominion/optimize.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="180">
          <caret line="12" column="37" selection-start-line="12" selection-start-column="37" selection-end-line="12" selection-end-column="37" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/vega/arc-diagram.vg.json">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="30" column="37" selection-start-line="30" selection-start-column="37" selection-end-line="30" selection-end-column="37" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/vega/bar-chart.vg.json">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="16" selection-start-line="16" selection-end-line="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clojure_dominion/file.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="14" column="20" selection-start-line="14" selection-start-column="20" selection-end-line="14" selection-end-column="20" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/git_digger/custering.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="450">
          <caret line="30" selection-start-line="30" selection-end-line="30" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/metasoarous/oz/1.4.1/oz-1.4.1.jar!/oz/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret column="4" selection-start-column="4" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1215">
          <caret line="81" column="1" selection-start-line="81" selection-start-column="1" selection-end-line="81" selection-end-column="1" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/csv_analyse/analyse.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="330">
          <caret line="22" column="17" selection-start-line="22" selection-start-column="17" selection-end-line="22" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/scrap.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="585">
          <caret line="39" column="20" selection-start-line="39" selection-start-column="20" selection-end-line="39" selection-end-column="20" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.m2/repository/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="303">
          <caret line="406" column="6" selection-start-line="406" selection-start-column="6" selection-end-line="406" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/git_digger/digger.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="714">
          <caret line="193" column="41" lean-forward="true" selection-start-line="193" selection-start-column="41" selection-end-line="193" selection-end-column="41" />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="FacetStructureConfigurable.UI">
        <settings>
          <last-edited>No facets are configured</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <last-edited>clojure-dominion</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.29229" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectJDKs.UI">
        <settings>
          <last-edited>1.6</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.20000002" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <last-edited>Leiningen: aleph:0.4.6</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.29229" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>